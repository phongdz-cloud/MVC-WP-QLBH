<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRemove.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAABJVJREFUaEPt
        WV1sFFUUvpUGy5sP+qLti+kbtE1oJaJVkfjQAE3Uqg8QqQnGB39iMDGN9oWSmFBMQONTA1htYlpaG21s
        MICxGg0UKDbSLGlawZSmVgosy0/Z/h++03umc+d22t1NZjqU8CVf5t57/r6zc2dmd1Y9wP2MZkXvH1b0
        nkyXFyD+LXCGiSYqZXl5AKLLwAmQhDwuE3O0gJAnwG6wpknRWlmeA9aKYEuAjniHCbaJ2yxIURbngK0G
        7G5U9LiYwgO2wxuGKOZVsKFF0es4FoNXZN2PbCsW3waQY+fsvC5lwgMa2G8WDZJoYJ+UCQ8odMouHCA7
        pUw4QIFVoHlxBs3xekU5Ui54oECpVTBwYos+K+WCQ4ei7O8VlWCPfuNXNEhKjWKuKeUzR6uiJ5FoOxLV
        gTFwkpMvMbkm165jLaxJ5KUGgvolyb3EPpGXGtiHtT4JIiXOwh6RlxpwfsYvScRcL/JSY5eihxAwbCWI
        ksOsSeSlBwQdtJJERmzpAyIrfSCo3C9ZFMSW3iKy0gcCC8wkx4tpFpM3iX54xLsW73L9eGzjzpC2XTyk
        56fe1POhNj0/Woh5FtHUKNHMJFFrjpuPiW+sa0RWeuCnIQLjZhJHLONclXfNr4H/jxMNNmteqNO27g+1
        LbZbz0cH9LxzG9FPuXp8I+bmMniNbywib3HAeTM4agTP0mxg7LL+lBZrgG1mPLNjg7ZdaiJqe0yPGb21
        RL9t1OOB7+bHCW/jg90kMv0Bpx3glBE0R0fs2AhO8zTR6crMG2h7VNviZ4h+f0mPGf+1E3W9o8fnPpkf
        Z5CfzjtErhforgpG/g3rF+gRO/QjUaIHayXumuPnNGDiz3LXztfDxHWivz/WH8Stfr2Vej/Xvn9sdn0X
        IP/GrhLZLmCoZqPh6KHZwK/P6XFPtT76NWBeA+bZGP7Ztd/6Ry7sGaKRDr3enuf6LkBu4FOR7QUMFXBI
        WgGztLfLtdNEyWHvGtNpwG8LMXm/M/huw3ehs+/KfIpoPO4fYzCJi/lVkesPNPEiHOf9KLcbOFGh54xM
        Gujcqu2M858R/fKUTAA+C34xwgTEbxCZi4PvuwgYNBPYDbRkE93+17vGdBrwu40yjxZoO4Nvn3w3m57Q
        8/6vXD+LlzJ+FuAHTKGZxG6A+dcH89ecBkw4DzImNz6V1OvHirwxZ952/SwWiKz0gaBXrCSREdv6ZZGV
        PhBYbyeKimjga5GVHhC0AvS8dIqYI+AKkZcacA797UOmxFlI/20FAvbaCaImGqgVeamBgF47wT3AXpGX
        GnDOx0NjG/glxifBMUmylOSaJ1kDa8E4X+RlDgSvBNfhNH6Lo1+xwAix/GJrHbhSygcHJF3vFAqLeOI+
        LeWCxxFFD6NImNspyTWkXDhAEb4m/IoHwRNSJjygyBdW0cCIa2y/lAkPuMj47yGzcB/W9uBY2qgoD8cB
        w2ZzQHxKJcZ+B/ualAkPrYpyUSiGT2sXvrGuluU58BrsnjcawvhC/pwL9hjnluVoATEvgObFnoTI58W8
        PADB/G/mNJPHsry8APEfQfxOmT7AfQil7gLRls0Fx9fPEQAAAABJRU5ErkJggg==
</value>
  </data>
</root>